import type { Metadata } from "next";
import localFont from "next/font/local";
import { PokemonProvider } from "@/context/PokemonProvider";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const fetchPokemonList = async () => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon/?limit=1302");
  if (!response.ok) {
    throw new Error(`Failed fetch: ${response.statusText}`);
  }

  return response.json();
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const data = await fetchPokemonList();
  data.results.sort((a: { name: string }, b: { name: string }) =>
    a.name.localeCompare(b.name)
  );

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <PokemonProvider pokemons={data}>{children}</PokemonProvider>
      </body>
    </html>
  );
}
